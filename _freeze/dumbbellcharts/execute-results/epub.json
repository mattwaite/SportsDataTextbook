{
  "hash": "d9c58bc122416b33710b5694507b0d90",
  "result": {
    "markdown": "# Dumbbell and lollipop charts\n\nSecond to my love of waffle charts because I'm always hungry, dumbbell charts are an excellently named way of **showing the difference between two things on a number line** -- a start and a finish, for instance. Or the difference between two related things. Say, turnovers and assists. \n\nLollipop charts -- another excellent name -- are a variation on bar charts. They do a good job of showing magnitude and difference between things. \n\nTo use both of them, you need to add a new library: \n\n`install.packages(\"ggalt\")`\n\nLet's give it a whirl.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggalt)\n```\n:::\n\n\n\n\n## Dumbbell plots\n\nFor this, let's use college football game logs from this season so far.\n\n\n\n\n<pre><p><strong>For this walkthrough:</strong></p><p><a href=\"http://mattwaite.github.io/sportsdatafiles/footballlogs21.csv\">\n  <button class=\"btn btn-danger\"><i class=\"fa fa-save\"></i> Download csv file</button>\n</a></p></pre>\n\n\n\n\nAnd load it.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogs <- read_csv(\"data/footballlogs21.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 740 Columns: 54\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): HomeAway, Opponent, Result, TeamFull, TeamURL, Outcome, Team, Con...\ndbl  (45): Game, PassingCmp, PassingAtt, PassingPct, PassingYds, PassingTD, ...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n\n\nFor the first example, let's look at the difference between a team's giveaways -- turnovers lost -- versus takeaways, turnovers gained. To get this, we're going to add up all offensive turnovers and defensive turnovers for a team in a season and take a look at where they come out. To make this readable, I'm going to focus on the Big Ten.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nturnovers <- logs |>\n  group_by(Team, Conference) |> \n  summarise(\n    Giveaways = sum(TotalTurnovers), \n    Takeaways = sum(DefTotalTurnovers)) |>\n  filter(Conference == \"Big Ten Conference\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Team'. You can override using the\n`.groups` argument.\n```\n:::\n:::\n\n\n\n\nNow, the way that the `geom_dumbbell` works is pretty simple when viewed through what we've done before. There's just some tweaks. \n\nFirst: We start with the y axis. The reason is we want our dumbbells going left and right, so the label is going to be on the y axis. \n\nSecond: Our x is actually two things: x and xend. What you put in there will decide where on the line the dot appears.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_dumbbell(\n    data=turnovers, \n    aes(y=Team, x=Takeaways, xend=Giveaways)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using the `size` aesthetic with geom_segment was deprecated in ggplot2 3.4.0.\nℹ Please use the `linewidth` aesthetic instead.\n```\n:::\n\n::: {.cell-output-display}\n![](dumbbellcharts_files/figure-epub/unnamed-chunk-5-1.png)\n:::\n:::\n\n\n\n\nWell, that's a chart alright, but what dot is the giveaways and what are the takeaways? To fix this, we'll add colors.\n\nSo our choice of colors here is important. We want giveaways to be seen as bad and takeaways to be seen as good. So lets try red for giveaways and green for takeaways. To make this work, we'll need to do three things: first, use the English spelling of color, so `colour`. The, uh, `colour` is the bar between the dots, the `x_colour` is the color of the x value dot and the `xend_colour` is the color of the xend dot. So in our setup, takeaways are x, they're good, so they're green. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_dumbbell(\n    data=turnovers, \n    aes(y=Team, x=Takeaways, xend=Giveaways),\n    colour = \"grey\",\n    colour_x = \"green\",\n    colour_xend = \"red\")\n```\n\n::: {.cell-output-display}\n![](dumbbellcharts_files/figure-epub/unnamed-chunk-6-1.png)\n:::\n:::\n\n\n\n\nBetter. Let's make two more tweaks. First, let's make the whole thing bigger with a `size` element. And let's add `theme_minimal` to clean out some cruft. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_dumbbell(\n    data=turnovers, \n    aes(y=Team, x=Takeaways, xend=Giveaways),\n    size = 1,\n    color = \"grey\",\n    colour_x = \"green\",\n    colour_xend = \"red\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](dumbbellcharts_files/figure-epub/unnamed-chunk-7-1.png)\n:::\n:::\n\n\n\n\nAnd now we have a chart that tells a story -- got green on the right? That's good. A long distance between green and red? Better. But what if we sort it by good turnovers? \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_dumbbell(\n    data=turnovers, \n    aes(y=reorder(Team, Takeaways), x=Takeaways, xend=Giveaways),\n    size = 1,\n    color = \"grey\",\n    colour_x = \"green\",\n    colour_xend = \"red\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](dumbbellcharts_files/figure-epub/unnamed-chunk-8-1.png)\n:::\n:::\n\n\n\n\nBelieve it or not, Iowa had the most takeaways in the Big Ten this season.\n\n## Lollipop charts\n\nSticking with takeaways, lollipops are similar to bar charts in that they show magnitude. And like dumbbells, they are similar in that we start with a y -- the traditional lollipop chart is on its side -- and we only need one x. The only additional thing we need to add is that we need to tell it that it is a horizontal chart.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_lollipop(\n    data=turnovers, \n    aes(y=Team, x=Takeaways), \n    horizontal = TRUE\n    )\n```\n\n::: {.cell-output-display}\n![](dumbbellcharts_files/figure-epub/unnamed-chunk-9-1.png)\n:::\n:::\n\n\n\n\nWe can do better than this with a simple theme_minimal and some better labels. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_lollipop(\n    data=turnovers, \n    aes(y=reorder(Team, Takeaways), x=Takeaways), \n    horizontal = TRUE\n    ) + theme_minimal() + \n  labs(title = \"Nebraska's defense improved, but needs more takeaways\", y=\"Team\")\n```\n\n::: {.cell-output-display}\n![](dumbbellcharts_files/figure-epub/unnamed-chunk-10-1.png)\n:::\n:::\n\n\n\n\nHow about some layering? \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnu <- turnovers |> filter(Team == \"Nebraska\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_lollipop(\n    data=turnovers, \n    aes(y=reorder(Team, Takeaways), x=Takeaways), \n    horizontal = TRUE\n    ) + \n  geom_lollipop(\n    data=nu,\n    aes(y=Team, x=Takeaways),\n    horizontal = TRUE,\n    color = \"red\"\n  ) + \n  theme_minimal() + \n  labs(title = \"Nebraska's defense wasn't as bad as you think\", y=\"Team\")\n```\n\n::: {.cell-output-display}\n![](dumbbellcharts_files/figure-epub/unnamed-chunk-12-1.png)\n:::\n:::\n\n\n\n\nThe headline says it all.",
    "supporting": [
      "dumbbellcharts_files/figure-epub"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}