{
  "hash": "ba2daee4c5132402fc5332c852581c72",
  "result": {
    "markdown": "# Annotations\n\nSome of the best sports data visualizations start with a provocative question. How about this one: Who really belongs in the college football playoffs and why is it never Notre Dame? \n\nFor this, we're going to go back to some code we started in Bubble Charts and we're going to add some annotations to it. Annotations help us draw attention to things, or help the reader understand what they're looking at. They're labels on things, be that the teams we want to highlight or regions of the chart or lines or all of those things. \n\nFor this, we'll need to add a new library to the mix called `ggrepel`. You'll need to install it in the console with `install.packages(\"ggrepel\")`. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggrepel)\n```\n:::\n\n\n\n\nNow we'll grab the data, each football game in 2020.\n\n\n\n\n<pre><p><strong>For this walkthrough:</strong></p><p><a href=\"http://mattwaite.github.io/sportsdatafiles/footballlogs20.csv\">\n  <button class=\"btn btn-danger\"><i class=\"fa fa-save\"></i> Download csv file</button>\n</a></p></pre>\n\n\n\n\nNow load it.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogs <- read_csv(\"data/footballlogs20.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1100 Columns: 54\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): HomeAway, Opponent, Result, TeamFull, TeamURL, Outcome, Team, Con...\ndbl  (45): Game, PassingCmp, PassingAtt, PassingPct, PassingYds, PassingTD, ...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n\n\nI'm going to set up a point chart that places teams on two-axes -- yards per play on offense on the x axis, and yards per play on defense. We did this in the bubble charts example.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogs %>% \n  group_by(Team, Conference) %>% \n  summarise(\n    TotalPlays = sum(OffensivePlays), \n    TotalYards = sum(OffensiveYards), \n    DefensivePlays = sum(DefPlays), \n    DefensiveYards = sum(DefYards)) %>% \n  mutate(\n    OffensiveYPP = TotalYards/TotalPlays, \n    DefensiveYPP = DefensiveYards/DefensivePlays) -> ypp\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Team'. You can override using the\n`.groups` argument.\n```\n:::\n:::\n\n\n\n\nTo build the annotations, I want the average for offensive yards per play and defensive yards per play. We're going to use those as a proxy for quality. If your team averages more yards per play on offense, that's good. If they average fewer yards per play on defense, that too is good. So that sets up a situation where we have four corners, anchored by good at both and bad at both. The averages will create lines to divide those four corners up. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naverages <- ypp %>% ungroup() %>% summarise(AvgOffYardsPer = mean(OffensiveYPP), AvgDefYardsPer = mean(DefensiveYPP))\n\naverages\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  AvgOffYardsPer AvgDefYardsPer\n           <dbl>          <dbl>\n1           5.73           5.75\n```\n:::\n:::\n\n\n\n\nI also want to highlight playoff teams.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplayoff_teams <- c(\"Notre Dame\", \"Alabama\", \"Clemson\", \"Ohio State\")\n\nplayoffs <- ypp %>% filter(Team %in% playoff_teams)\n```\n:::\n\n\n\n\nNow we create the plot. We have two geom_points, starting with everyone, then playoff teams. I alter the colors on each to separate them. Next, I add a geom_hline to add the horizontal line of my defensive average and a geom_vline for my offensive average. Next, I want to add some text annotations, labeling two corners of my chart (the other two, in my opinion, become obvious). Then, I want to label all the playoff teams. I use `geom_text_repel` to do that -- it's using the ggrepel library to push the text away from the dots, respective of other labels and other dots. It means you don't have to move them around so you can read them, or so they don't cover up the dots. \n\nThe rest is just adding labels and messing with the theme. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_point(data=ypp, aes(x=OffensiveYPP, y=DefensiveYPP), color=\"light grey\") +\n  geom_point(data=playoffs, aes(x=OffensiveYPP, y=DefensiveYPP)) +\n  geom_hline(yintercept=5.7, color=\"dark grey\") + \n  geom_vline(xintercept=5.7, color=\"dark grey\") + \n  geom_text(aes(x=6.8, y=5, label=\"Good Offense, Good Defense\"), color=\"blue\") +\n  geom_text(aes(x=5, y=6, label=\"Bad Defense, Bad Offense\"), color=\"blue\") +\n  geom_text_repel(data=playoffs, aes(x=OffensiveYPP, y=DefensiveYPP, label=Team)) +\n  labs(x=\"Offensive Yards Per Play\", y=\"Defensive Points Per Play\", title=\"All four playoff teams are good\", subtitle=\"Each of the four have above average offenses and defenses.\", caption=\"Source: Sports-Reference.com | By Matt Waite\") +\n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.text = element_text(size = 7),\n    axis.ticks = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](annotations_files/figure-epub/unnamed-chunk-7-1.png)\n:::\n:::\n",
    "supporting": [
      "annotations_files/figure-epub"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": {},
    "postProcess": true
  }
}